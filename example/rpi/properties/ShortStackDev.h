/*
 * THIS FILE IS MACHINE-GENERATED. DO NOT EDIT.
 *
 * Content generated by Echelon IzoT Interface Interpreter 1.10.03 at 18-Aug-2015 08:00
 * Copyright (c) Echelon Corporation 2015
 *
 * Target: Echelon IzoT ShortStack (SS430_FT6050_SYS20000kHz)
 *
 * Use of this code is subject to your compliance with the terms of the
 * Echelon IzoT(tm) ShortStack License Agreement which is
 * available at www.echelon.com
 */
#ifndef DEFINED_SHORTSTACKDEV_H
    /* Define macro derived from the current output name */
#   define DEFINED_SHORTSTACKDEV_H

#define LON_FRAMEWORK_TYPE_III 1

#include <stddef.h>
#include "LonPlatform.h"

/*
 * Data type definitions
 */
typedef LonBits8 object_request_t;
#define RQ_NUL -1    /* enum object_request_t */
#define RQ_NORMAL 0    /* enum object_request_t */
#define RQ_DISABLED 1    /* enum object_request_t */
#define RQ_UPDATE_STATUS 2    /* enum object_request_t */
#define RQ_SELF_TEST 3    /* enum object_request_t */
#define RQ_UPDATE_ALARM 4    /* enum object_request_t */
#define RQ_REPORT_MASK 5    /* enum object_request_t */
#define RQ_OVERRIDE 6    /* enum object_request_t */
#define RQ_ENABLE 7    /* enum object_request_t */
#define RQ_RMV_OVERRIDE 8    /* enum object_request_t */
#define RQ_CLEAR_STATUS 9    /* enum object_request_t */
#define RQ_CLEAR_ALARM 10    /* enum object_request_t */
#define RQ_ALARM_NOTIFY_ENABLED 11    /* enum object_request_t */
#define RQ_ALARM_NOTIFY_DISABLED 12    /* enum object_request_t */
#define RQ_MANUAL_CTRL 13    /* enum object_request_t */
#define RQ_REMOTE_CTRL 14    /* enum object_request_t */
#define RQ_PROGRAM 15    /* enum object_request_t */
#define RQ_CLEAR_RESET 16    /* enum object_request_t */
#define RQ_RESET 17    /* enum object_request_t */
#define RQ_CLEAR_LOG 18    /* enum object_request_t */
#define RQ_LOAD_PROGRAM 19    /* enum object_request_t */
#define RQ_RUN_PROGRAM 20    /* enum object_request_t */
#define RQ_HALT_PROGRAM 21    /* enum object_request_t */
#define RQ_RESTART_PROGRAM 22    /* enum object_request_t */
#define RQ_UNLOAD_PROGRAM 23    /* enum object_request_t */
#define RQ_STEP_PROGRAM 24    /* enum object_request_t */

typedef LON_STRUCT_BEGIN(SNVT_obj_request) {
    LonWord object_id;
    object_request_t object_request;
} LON_STRUCT_END(SNVT_obj_request);

/* Literals for SNVT_obj_status.flags */
#define ST_INVALID_ID        0x80000000
#define ST_INVALID_REQUEST   0x40000000
#define ST_DISABLED          0x20000000
#define ST_OUT_OF_LIMITS     0x10000000
#define ST_OPEN_CIRCUIT      0x08000000
#define ST_OUT_OF_SERVICE    0x04000000
#define ST_MECHANICAL_FAULT  0x02000000
#define ST_FEEDBACK_FAILURE  0x01000000
#define ST_OVER_RANGE        0x00800000
#define ST_UNDER_RANGE       0x00400000
#define ST_ELECTRICAL_FAULT  0x00200000
#define ST_UNABLE_TO_MEASURE 0x00100000
#define ST_COMM_FAILURE      0x00080000
#define ST_FAIL_SELF_TEST    0x00040000
#define ST_SELF_TEST_IN_PROGRESS  0x00020000
#define ST_LOCKED_OUT        0x00010000
#define ST_MANUAL_CONTROL    0x00008000
#define ST_IN_ALARM          0x00004000
#define ST_IN_OVERRIDE       0x00002000
#define ST_REPORT_MASK       0x00001000
#define ST_PROGRAMMING_MODE  0x00000800
#define ST_PROGRAMMING_FAIL  0x00000400
#define ST_ALARM_NOTIFY_DISABLED  0x00000200
#define ST_RESET_COMPLETE    0x00000100

typedef LON_STRUCT_BEGIN(SNVT_obj_status) {
    LonWord object_id;
    LonDoubleWord flags;
} LON_STRUCT_END(SNVT_obj_status);

typedef LonBits8 config_source_t;
#define CFG_NUL -1    /* enum config_source_t */
#define CFG_LOCAL 0    /* enum config_source_t */
#define CFG_EXTERNAL 1    /* enum config_source_t */

typedef config_source_t SNVT_config_src;

typedef SNVT_config_src SCPTnwrkCnfg;

typedef LonWord SNVT_volt;

typedef LonBits8 reliability_t;
#define DVR_NUL -1    /* enum reliability_t */
#define DVR_NO_FAULT_DETECTED 0    /* enum reliability_t */
#define DVR_NO_SENSOR 1    /* enum reliability_t */
#define DVR_OVER_RANGE 2    /* enum reliability_t */
#define DVR_UNDER_RANGE 3    /* enum reliability_t */
#define DVR_OPEN_LOOP 4    /* enum reliability_t */
#define DVR_SHORTED_LOOP 5    /* enum reliability_t */
#define DVR_NO_OUTPUT 6    /* enum reliability_t */
#define DVR_UNRELIABLE_OTHER 7    /* enum reliability_t */
#define DVR_PROCESS_ERROR 8    /* enum reliability_t */
#define DVR_MULTI_STATE_FAULT 9    /* enum reliability_t */
#define DVR_CONFIGURATION_ERROR 10    /* enum reliability_t */
#define DVR_RESERVED 11    /* enum reliability_t */
#define DVR_COMMUNICATION_FAILURE 12    /* enum reliability_t */
#define DVR_MEMBER_FAULT 13    /* enum reliability_t */
#define DVR_MONITORED_OBJECT_FAULT 14    /* enum reliability_t */
#define DVR_TRIPPED 15    /* enum reliability_t */

typedef LonBits8 event_state_t;
#define EVS_NUL -1    /* enum event_state_t */
#define EVS_NORMAL 0    /* enum event_state_t */
#define EVS_FAULT 1    /* enum event_state_t */
#define EVS_OFFNORMAL 2    /* enum event_state_t */
#define EVS_HIGH_LIMIT 3    /* enum event_state_t */
#define EVS_LOW_LIMIT 4    /* enum event_state_t */
#define EVS_LIFE_SAFETY_ALARM 5    /* enum event_state_t */
#define EVS_MANUFACTURE_SPECIFIC 63    /* enum event_state_t */

typedef LON_STRUCT_BEGIN(UNVT_iot_status_flags) {
    LonByte ___bf00;
#define UNVT_iot_status_flags__fault_CONTAINER    ___bf00
#define UNVT_iot_status_flags__fault_SIZE         1
#define UNVT_iot_status_flags__fault_OFFSET       1
#define UNVT_iot_status_flags__fault_MIN          0
#define UNVT_iot_status_flags__fault_MAX          1

#define UNVT_iot_status_flags__in_alarm_CONTAINER    ___bf00
#define UNVT_iot_status_flags__in_alarm_SIZE         1
#define UNVT_iot_status_flags__in_alarm_OFFSET       0
#define UNVT_iot_status_flags__in_alarm_MIN          0
#define UNVT_iot_status_flags__in_alarm_MAX          1

#define UNVT_iot_status_flags__out_of_service_CONTAINER    ___bf00
#define UNVT_iot_status_flags__out_of_service_SIZE         1
#define UNVT_iot_status_flags__out_of_service_OFFSET       3
#define UNVT_iot_status_flags__out_of_service_MIN          0
#define UNVT_iot_status_flags__out_of_service_MAX          1

#define UNVT_iot_status_flags__overridden_CONTAINER    ___bf00
#define UNVT_iot_status_flags__overridden_SIZE         1
#define UNVT_iot_status_flags__overridden_OFFSET       2
#define UNVT_iot_status_flags__overridden_MIN          0
#define UNVT_iot_status_flags__overridden_MAX          1

} LON_STRUCT_END(UNVT_iot_status_flags);

typedef LonDouble UNVT_iot_timestamp;

typedef LON_STRUCT_BEGIN(iot_load_control__load_groupsType) {
    LonByte flags[8];
} LON_STRUCT_END(iot_load_control__load_groupsType);

typedef LonBits8 command_priority_t;
#define CPL_NUL -1    /* enum command_priority_t */
#define CPL_RESERVED 0    /* enum command_priority_t */
#define CPL_MANUAL_LIFE_SAFETY 1    /* enum command_priority_t */
#define CPL_AUTOMATIC_LIFE_SAFETY 2    /* enum command_priority_t */
#define CPL_LEVEL_3 3    /* enum command_priority_t */
#define CPL_LEVEL_4 4    /* enum command_priority_t */
#define CPL_CRITICAL_EQUIPMENT_CONTROL 5    /* enum command_priority_t */
#define CPL_MINIMUM_ON_OFF 6    /* enum command_priority_t */
#define CPL_LEVEL_7 7    /* enum command_priority_t */
#define CPL_MANUAL_OPERATOR 8    /* enum command_priority_t */
#define CPL_LEVEL_9 9    /* enum command_priority_t */
#define CPL_LEVEL_10 10    /* enum command_priority_t */
#define CPL_LEVEL_11 11    /* enum command_priority_t */
#define CPL_LEVEL_12 12    /* enum command_priority_t */
#define CPL_LEVEL_13 13    /* enum command_priority_t */
#define CPL_LEVEL_14 14    /* enum command_priority_t */
#define CPL_LEVEL_15 15    /* enum command_priority_t */
#define CPL_LEVEL_16 16    /* enum command_priority_t */

typedef LonBits8 occup_t;
#define OC_NUL -1    /* enum occup_t */
#define OC_OCCUPIED 0    /* enum occup_t */
#define OC_UNOCCUPIED 1    /* enum occup_t */
#define OC_BYPASS 2    /* enum occup_t */
#define OC_STANDBY 3    /* enum occup_t */

typedef occup_t SNVT_occupancy;

typedef LON_STRUCT_BEGIN(color_2__color_valueType__RGBType) {
    LonByte red;
    LonByte green;
    LonByte blue;
} LON_STRUCT_END(color_2__color_valueType__RGBType);

typedef LON_STRUCT_BEGIN(color_2__color_valueType__CIE1931_percentType) {
    LonByte x;
    LonByte y;
    LonWord percent_Y;
} LON_STRUCT_END(color_2__color_valueType__CIE1931_percentType);

typedef LON_STRUCT_BEGIN(color_2__color_valueType__CIE1931_lumenType) {
    LonByte x;
    LonByte y;
    LonWord absolute_Y;
} LON_STRUCT_END(color_2__color_valueType__CIE1931_lumenType);

typedef LON_UNION_BEGIN(color_2__color_valueType) {
    color_2__color_valueType__CIE1931_lumenType CIE1931_lumen;
    color_2__color_valueType__CIE1931_percentType CIE1931_percent;
    color_2__color_valueType__RGBType RGB;
    LonByte color_temperature;
} LON_UNION_END(color_2__color_valueType);

typedef LonBits8 color_encoding_t;
#define COLOR_NUL -1    /* enum color_encoding_t */
#define COLOR_CIE31_LUMEN 0    /* enum color_encoding_t */
#define COLOR_CIE31_PERCENT 1    /* enum color_encoding_t */
#define COLOR_RGB 2    /* enum color_encoding_t */
#define COLOR_TEMPERATURE 3    /* enum color_encoding_t */

typedef LON_STRUCT_BEGIN(SNVT_color_2) {
    color_encoding_t encoding;
    color_2__color_valueType color_value;
} LON_STRUCT_END(SNVT_color_2);

typedef LonBits8 load_control_t;
#define LOAD_NUL -1    /* enum load_control_t */
#define LOAD_REPORT 0    /* enum load_control_t */
#define LOAD_SET 1    /* enum load_control_t */
#define LOAD_TOGGLE 2    /* enum load_control_t */
#define LOAD_INCREMENT 3    /* enum load_control_t */
#define LOAD_CYCLE 4    /* enum load_control_t */
#define LOAD_INCREMENT_HUE 5    /* enum load_control_t */
#define LOAD_RECALL_SCENE 6    /* enum load_control_t */
#define LOAD_STORE_SCENE 7    /* enum load_control_t */
#define LOAD_LEARN_SCENE 8    /* enum load_control_t */
#define LOAD_WINK 9    /* enum load_control_t */
#define LOAD_FACTORY_DEFAULTS 10    /* enum load_control_t */
#define LOAD_STOP 11    /* enum load_control_t */

typedef LON_STRUCT_BEGIN(UNVT_iot_load_control) {
    load_control_t control;
    LonByte state;
    LonFloat level;
    LonFloat angle;
    SNVT_color_2 color;
    LonFloat level_multiplier;
    LonFloat target_reduction;
    SNVT_occupancy area_occupancy;
    SNVT_occupancy local_occupancy;
    LonFloat delay;
    LonFloat fade;
    LonFloat duration;
    LonByte button;
    command_priority_t priority;
    LonWord scene_number;
    iot_load_control__load_groupsType load_groups;
    UNVT_iot_timestamp update_time;
    UNVT_iot_status_flags status_flags;
    event_state_t event_state;
    reliability_t reliability;
} LON_STRUCT_END(UNVT_iot_load_control);

typedef LonWord SNVT_address;

typedef LonByte SCPTdevMajVer;

typedef LonByte SCPTdevMinVer;

typedef LON_STRUCT_BEGIN(SNVT_str_asc) {
    LonByte ascii_[31];
} LON_STRUCT_END(SNVT_str_asc);

typedef SNVT_str_asc SCPTlocation;

typedef LonWord SNVT_lev_percent;

typedef LonWord SNVT_time_sec;

typedef LON_STRUCT_BEGIN(UCPTnetworkTiming) {
    SNVT_time_sec standard_heartbeat;
    SNVT_time_sec standard_randomization;
    SNVT_time_sec fast_heartbeat;
    SNVT_time_sec fast_randomization;
    SNVT_time_sec throttle;
    SNVT_lev_percent min_delta;
} LON_STRUCT_END(UCPTnetworkTiming);

typedef LonBits8 char_encoding_t;
#define CE_NUL -1    /* enum char_encoding_t */
#define CE_UTF_8 0    /* enum char_encoding_t */
#define CE_UTF_16 1    /* enum char_encoding_t */
#define CE_GB18030 2    /* enum char_encoding_t */
#define CE_UTF_16BE 3    /* enum char_encoding_t */
#define CE_UTF_16LE 4    /* enum char_encoding_t */

typedef LON_STRUCT_BEGIN(UCPTiotDescription) {
    char_encoding_t encoding;
    LonByte name[120];
} LON_STRUCT_END(UCPTiotDescription);

typedef LonBits8 boolean_t;
#define BOOL_NUL -1    /* enum boolean_t */
#define BOOL_FALSE 0    /* enum boolean_t */
#define BOOL_TRUE 1    /* enum boolean_t */

typedef boolean_t UCPTeventAlgorithmInhibit;

typedef boolean_t UCPTeventDetectionEnable;

typedef LonFloat UCPTiotFeedbackDelay;

typedef LON_STRUCT_BEGIN(SNVT_load_offsets) {
    SNVT_lev_percent standby_offset;
    LonBits8 standby_rotation;
    SNVT_lev_percent demand_response_offset;
    LonBits8 demand_response_rotation;
} LON_STRUCT_END(SNVT_load_offsets);

typedef SNVT_load_offsets SCPTloadControlOffset;

typedef LON_STRUCT_BEGIN(UCPTiotLoadGroupMembership) {
    LonByte flags[8];
} LON_STRUCT_END(UCPTiotLoadGroupMembership);

typedef LON_STRUCT_BEGIN(UCPTiotLocation) {
    char_encoding_t encoding;
    LonByte name[120];
} LON_STRUCT_END(UCPTiotLocation);

typedef LON_STRUCT_BEGIN(UCPTiotName) {
    char_encoding_t encoding;
    LonByte name[120];
} LON_STRUCT_END(UCPTiotName);

typedef boolean_t UCPTreliabilityEvaluationInhibit;

typedef LON_STRUCT_BEGIN(iotScene__load_groupsType) {
    LonByte flags[8];
} LON_STRUCT_END(iotScene__load_groupsType);

typedef LON_STRUCT_BEGIN(iotScene__actionType) {
    LonByte ___bf00;
#define iotScene__actionType__control_CONTAINER    ___bf00
#define iotScene__actionType__control_SIZE         1
#define iotScene__actionType__control_OFFSET       0
#define iotScene__actionType__control_MIN          0
#define iotScene__actionType__control_MAX          1

#define iotScene__actionType__output_CONTAINER    ___bf00
#define iotScene__actionType__output_SIZE         1
#define iotScene__actionType__output_OFFSET       1
#define iotScene__actionType__output_MIN          0
#define iotScene__actionType__output_MAX          1

} LON_STRUCT_END(iotScene__actionType);

typedef LON_STRUCT_BEGIN(UCPTiotScene) {
    LonWord scene_number;
    LonWord unoccupied_scene_number;
    LonWord standby_scene_number;
    LonWord next_scene__number;
    iotScene__actionType action;
    load_control_t control;
    LonByte state;
    LonFloat level;
    LonFloat angle;
    SNVT_color_2 color;
    LonFloat level_multiplier;
    LonFloat reduction_multiplier;
    SNVT_occupancy area_occupancy;
    LonFloat delay;
    LonFloat fade;
    LonFloat hold;
    LonFloat duration;
    command_priority_t priority;
    iotScene__load_groupsType load_groups;
} LON_STRUCT_END(UCPTiotScene);

/* end Data type definitions */

/*
 * Block type definitions and references
 */
#define SFPTnodeObject(mod)   SFPTnodeObject_##mod
typedef struct {
   unsigned global_index;
   struct {
      SNVT_obj_request data;
      unsigned global_index;
   } nviRequest;
   struct {
      SNVT_obj_status data;
      unsigned global_index;
   } nvoStatus;
   struct {
      SNVT_address data;
      unsigned global_index;
   } nvoFileDirectory;
   SCPTdevMajVer* nciDevMajVer;
   SCPTdevMinVer* nciDevMinVer;
   SCPTlocation* nciLocation;
   SCPTnwrkCnfg* nciNetConfig;
} SFPTnodeObject_node;

extern SFPTnodeObject_node nodeObject;

#define SFPTclosedLoopActuator(mod, xxx)   SFPTclosedLoopActuator_##mod##xxx
typedef struct {
   unsigned global_index;
   struct {
      SNVT_volt data;
      unsigned global_index;
      SNVT_volt* nciHighLim1;
      SNVT_volt* nciLowLim1;
      SNVT_volt* nciOverValue;
   } nviValue;
   struct {
      SNVT_volt data;
      unsigned global_index;
   } nvoValueFb;
   SCPTlocation* nciLocation;
} SFPTclosedLoopActuator_voltSNVT_volt;

extern SFPTclosedLoopActuator_voltSNVT_volt driver[2];

#define UFPTiotLoad(mod)   UFPTiotLoad_##mod
typedef struct {
   unsigned global_index;
   struct {
      UNVT_iot_load_control data;
      unsigned global_index;
      UNVT_iot_load_control* cpDefaultInput;
      UCPTnetworkTiming* cpnLoadControl;
   } nviLoadControl;
   struct {
      UNVT_iot_load_control data;
      unsigned global_index;
      UCPTnetworkTiming* cpnLoadStatus;
   } nvoLoadStatus;
   UCPTiotDescription* cpDescription;
   UCPTeventAlgorithmInhibit* cpEventAlgorithmInhibit;
   UCPTeventDetectionEnable* cpEventDetectionEnable;
   UCPTiotFeedbackDelay* cpFeedbackDelay;
   SCPTloadControlOffset* cpLoadControlOffset;
   UCPTiotLoadGroupMembership* cpLoadGroups;
   UCPTiotLocation* cpLocation;
   UCPTiotName* cpName;
   UCPTreliabilityEvaluationInhibit* cpReliabilityEvaluationInhibit;
   UCPTiotScene* cpScene[3];
} UFPTiotLoad_load;

extern UFPTiotLoad_load load[4];

#define LON_FB_COUNT 7
/* end Block type definitions and references */

/*
 * Device datapoint references
 */
/* end Device datapoint references */

/*
 * Device property references
 */
/* end Device property references */

/*
 * Message tag references
 */
/* end Message tag references */

#define LON_NV_COUNT 18
/* For compatibility with older ShortStack applications */
#define LonNvCount LON_NV_COUNT
#define LON_PERSISTENT_NVS 3
#define LON_MT_COUNT 0
/* For compatibility with older ShortStack applications */
#define LonMtCount LON_MT_COUNT

#define LON_APP_OUTPUT_BUFSIZE 146
#define LON_APP_INPUT_BUFSIZE 146
#define LON_ISI_ENABLED 0x00
#define LON_USE_DEFAULT_COMMPARAMS 0x40 /* see LonCustomCommunicationParameters() */
#define LON_APP_SIGNATURE 0x267058E4
#define LON_APPLICATION_MESSAGES 0
#define LON_SERVICE_PIN_TIMER 0
#define LON_PROGRAM_ID "9F:FF:FF:08:16:02:04:02"

#define LON_NM_QUERY_FUNCTIONS 0
#define LON_NM_UPDATE_FUNCTIONS 0
#define LON_UTILITY_FUNCTIONS 0

#define LON_DMF_WINDOW_ENABLED 1
#define LON_DMF_WINDOW_SIZE    3464
#define LON_DMF_WINDOW_START   41216
#define LON_DMF_ENABLED LON_DMF_WINDOW_ENABLED
#define LON_DMF_FILEINDEX_DIRECTORY 0
#define LON_DMF_FILEINDEX_TEMPLATE 1
#define LON_DMF_FILEINDEX_MODIFIABLE 2
#define LON_DMF_FILEINDEX_READONLY 3
#define LON_DMF_FILEINDEX_MAXINDEX	LON_DMF_FILEINDEX_READONLY

#define LON_EXPLICIT_ADDRESSING (LON_ISI_ENABLED | 0x20)

extern const LonByte* LonGetSiData(unsigned* pLength);
extern const LonByte* LonGetAppInitData(void);
extern void* LonGetNvTable(void);
extern unsigned LonGetNvCount(void);
extern unsigned LonGetMtCount(void);
extern LonUbits32 LonGetSignature(void);
extern void* LonGetFile(int file_index, unsigned* pSize);
extern void LonFrameworkInit(void);

#ifndef DEFINED_SHORTSTACKDEV_H
    /* Define this unless same as output name */
#   define DEFINED_SHORTSTACKDEV_H
#endif
#endif   /* DEFINED_SHORTSTACKDEV_H */
