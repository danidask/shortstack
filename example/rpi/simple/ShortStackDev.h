/*
 * THIS FILE IS MACHINE-GENERATED. DO NOT EDIT.
 *
 * Content generated by Echelon IzoT Interface Interpreter 1.10.03 at 17-Feb-2015 18:48
 * Copyright (c) Echelon Corporation 2015
 *
 * Target: Echelon IzoT ShortStack (SS430_FT6050_SYS20000kHz)
 *
 * Use of this code is subject to your compliance with the terms of the
 * Echelon IzoT(tm) ShortStack License Agreement which is
 * available at www.echelon.com
 */
#ifndef DEFINED_SHORTSTACKDEV_H
#   define DEFINED_SHORTSTACKDEV_H

#define LON_FRAMEWORK_TYPE_III 1

#include <stddef.h>
#include "LonPlatform.h"

/*
 * Data type definitions
 */
typedef LonBits8 object_request_t;
#define RQ_NUL -1    /* enum object_request_t */
#define RQ_NORMAL 0    /* enum object_request_t */
#define RQ_DISABLED 1    /* enum object_request_t */
#define RQ_UPDATE_STATUS 2    /* enum object_request_t */
#define RQ_SELF_TEST 3    /* enum object_request_t */
#define RQ_UPDATE_ALARM 4    /* enum object_request_t */
#define RQ_REPORT_MASK 5    /* enum object_request_t */
#define RQ_OVERRIDE 6    /* enum object_request_t */
#define RQ_ENABLE 7    /* enum object_request_t */
#define RQ_RMV_OVERRIDE 8    /* enum object_request_t */
#define RQ_CLEAR_STATUS 9    /* enum object_request_t */
#define RQ_CLEAR_ALARM 10    /* enum object_request_t */
#define RQ_ALARM_NOTIFY_ENABLED 11    /* enum object_request_t */
#define RQ_ALARM_NOTIFY_DISABLED 12    /* enum object_request_t */
#define RQ_MANUAL_CTRL 13    /* enum object_request_t */
#define RQ_REMOTE_CTRL 14    /* enum object_request_t */
#define RQ_PROGRAM 15    /* enum object_request_t */
#define RQ_CLEAR_RESET 16    /* enum object_request_t */
#define RQ_RESET 17    /* enum object_request_t */
#define RQ_CLEAR_LOG 18    /* enum object_request_t */
#define RQ_LOAD_PROGRAM 19    /* enum object_request_t */
#define RQ_RUN_PROGRAM 20    /* enum object_request_t */
#define RQ_HALT_PROGRAM 21    /* enum object_request_t */
#define RQ_RESTART_PROGRAM 22    /* enum object_request_t */
#define RQ_UNLOAD_PROGRAM 23    /* enum object_request_t */
#define RQ_STEP_PROGRAM 24    /* enum object_request_t */

typedef LON_STRUCT_BEGIN(SNVT_obj_request) {
    LonWord object_id;
    object_request_t object_request;
} LON_STRUCT_END(SNVT_obj_request);

/* Literals for SNVT_obj_status.flags */
#define ST_INVALID_ID        0x80000000
#define ST_INVALID_REQUEST   0x40000000
#define ST_DISABLED          0x20000000
#define ST_OUT_OF_LIMITS     0x10000000
#define ST_OPEN_CIRCUIT      0x08000000
#define ST_OUT_OF_SERVICE    0x04000000
#define ST_MECHANICAL_FAULT  0x02000000
#define ST_FEEDBACK_FAILURE  0x01000000
#define ST_OVER_RANGE        0x00800000
#define ST_UNDER_RANGE       0x00400000
#define ST_ELECTRICAL_FAULT  0x00200000
#define ST_UNABLE_TO_MEASURE 0x00100000
#define ST_COMM_FAILURE      0x00080000
#define ST_FAIL_SELF_TEST    0x00040000
#define ST_SELF_TEST_IN_PROGRESS  0x00020000
#define ST_LOCKED_OUT        0x00010000
#define ST_MANUAL_CONTROL    0x00008000
#define ST_IN_ALARM          0x00004000
#define ST_IN_OVERRIDE       0x00002000
#define ST_REPORT_MASK       0x00001000
#define ST_PROGRAMMING_MODE  0x00000800
#define ST_PROGRAMMING_FAIL  0x00000400
#define ST_ALARM_NOTIFY_DISABLED  0x00000200
#define ST_RESET_COMPLETE    0x00000100

typedef LON_STRUCT_BEGIN(SNVT_obj_status) {
    LonWord object_id;
    LonDoubleWord flags;
} LON_STRUCT_END(SNVT_obj_status);

typedef LonByte SCPTdevMajVer;

typedef LonByte SCPTdevMinVer;

typedef LON_STRUCT_BEGIN(SNVT_str_asc) {
    LonByte ascii_[31];
} LON_STRUCT_END(SNVT_str_asc);

typedef SNVT_str_asc SCPTlocation;

typedef LonBits8 config_source_t;
#define CFG_NUL -1    /* enum config_source_t */
#define CFG_LOCAL 0    /* enum config_source_t */
#define CFG_EXTERNAL 1    /* enum config_source_t */

typedef config_source_t SNVT_config_src;

typedef SNVT_config_src SCPTnwrkCnfg;

typedef LonWord SNVT_volt;

/* end Data type definitions */

/*
 * Block type definitions and references
 */
#define SFPTnodeObject(mod)   SFPTnodeObject_##mod
typedef struct {
   unsigned global_index;
   struct {
      SNVT_obj_request data;
      unsigned global_index;
   } nviRequest;
   struct {
      SNVT_obj_status data;
      unsigned global_index;
   } nvoStatus;
   SCPTdevMajVer* nciDevMajVer;
   SCPTdevMinVer* nciDevMinVer;
   SCPTlocation* nciLocation;
   SCPTnwrkCnfg* nciNetConfig;
} SFPTnodeObject_node;

extern SFPTnodeObject_node nodeObject;

#define SFPTclosedLoopActuator(mod, xxx)   SFPTclosedLoopActuator_##mod##xxx
typedef struct {
   unsigned global_index;
   struct {
      SNVT_volt data;
      unsigned global_index;
   } nviValue;
   struct {
      SNVT_volt data;
      unsigned global_index;
   } nvoValueFb;
   SCPTlocation* nciLocation;
} SFPTclosedLoopActuator_voltSNVT_volt;

extern SFPTclosedLoopActuator_voltSNVT_volt driver[2];

#define LON_FB_COUNT 3
/* end Block type definitions and references */

/*
 * Device datapoint references
 */
/* end Device datapoint references */

/*
 * Device property references
 */
/* end Device property references */

/*
 * Message tag references
 */
typedef LonByte LonTag;
/* end Message tag references */

#define LonNvCount 12 /* Prefer LON_NV_COUNT */
#define LON_NV_COUNT LonNvCount    /* Prefer this over LonNvCount */
#define LON_PERSISTENT_NVS 6
#define LonMtCount 0 /* Prefer LON_MT_COUNT */
#define LON_MT_COUNT LonMtCount /* Prefer this over LonMtCount */

#define LON_APP_OUTPUT_BUFSIZE 146
#define LON_APP_INPUT_BUFSIZE 146
#define LON_ISI_ENABLED 0x00
#define LON_EXPLICIT_ADDRESSING (LON_ISI_ENABLED)
#define LON_USE_DEFAULT_COMMPARAMS 0x40 /* see LonCustomCommunicationParameters() */
#define LON_APP_SIGNATURE 0x6F13
#define LON_APPLICATION_MESSAGES 0
#define LON_SERVICE_PIN_TIMER 0
#define LON_PROGRAM_ID "9F:FF:FF:08:16:01:04:00"

#define LON_APPINIT_OFFSET_SIGNATURE    0
#define LON_APPINIT_OFFSET_PROGRAMID    2
#define LON_APPINIT_OFFSET_COMMPARAM    10
#define LON_APPINIT_OFFSET_MISC         26

#define LON_NM_QUERY_FUNCTIONS 0
#define LON_NM_UPDATE_FUNCTIONS 0
#define LON_UTILITY_FUNCTIONS 0
#define LON_DMF_WINDOW_ENABLED 0
#define LON_DMF_WINDOW_SIZE    0

#define LON_APP_INIT_MSG_SIZE     28
#define LON_MAX_NVS_IN_NV_INIT    61
#define LON_NV_ESCAPE_SEQUENCE    63

/*
 *  Type: LonNvDescription
 *  Defines the structure of the nvTable variable.
 */
#define LON_NVDESC_OUTPUT_MASK        0x80u
#define LON_NVDESC_OUTPUT_SHIFT       7
#define LON_NVDESC_OUTPUT_FIELD       Attributes

#define LON_NVDESC_PERSISTENT_MASK    0x40u
#define LON_NVDESC_PERSISTENT_SHIFT   6
#define LON_NVDESC_PERSISTENT_FIELD   Attributes

#define LON_NVDESC_POLLED_MASK        0x20u
#define LON_NVDESC_POLLED_SHIFT       5
#define LON_NVDESC_POLLED_FIELD       Attributes

#define LON_NVDESC_SYNC_MASK          0x10u
#define LON_NVDESC_SYNC_SHIFT         4
#define LON_NVDESC_SYNC_FIELD         Attributes

#define LON_NVDESC_CHANGEABLE_MASK    0x08u
#define LON_NVDESC_CHANGEABLE_SHIFT   3
#define LON_NVDESC_CHANGEABLE_FIELD   Attributes

#define LON_NVDESC_PRIORITY_MASK      0x04u
#define LON_NVDESC_PRIORITY_SHIFT     2
#define LON_NVDESC_PRIORITY_FIELD     Attributes

typedef struct
{
    volatile void* const pData;  /* value pointer */
    LonByte DeclaredSize;        /* initial and maximum size */
    LonByte Attributes;          /* See macro definitions above */
} LonNvDescription;

/*
 *  Message Tag Table Type Definition
 */
typedef LonBool LonMtDescription;

extern const LonByte* LonGetSiData(unsigned* pLength);
extern const LonByte* LonGetAppInitData(void);
extern const LonNvDescription* const LonGetNvTable(void);
extern void LonFrameworkInit(void);

#endif   /* DEFINED_SHORTSTACKDEV_H */
